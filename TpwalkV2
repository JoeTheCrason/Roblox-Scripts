local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\100\96","\59\74\78\181"),function(v42)if (v9(v42,2)==79) then local v88=0;while true do if (v88==0) then v30=v8(v11(v42,1,1));return "";end end else local v89=0;local v90;while true do if (v89==0) then v90=v10(v8(v42,16));if v30 then local v121=0;local v122;while true do if (v121==0) then v122=v13(v90,v30);v30=nil;v121=1;end if (v121==1) then return v122;end end else return v90;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v91=0;local v92;while true do if (v91==0) then v92=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v92-(v92%1) ;end end else local v93=2^(v44-(2 -1)) ;return (((v43%(v93 + v93))>=v93) and 1) or 0 ;end end local function v32()local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (1==v46) then return v47;end end end local function v33()local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34()local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35()local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -(1 -0)) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v102=0;while true do if (v102==0) then v59=2 -1 ;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/((621 -(555 + 64))^52))) ;end local function v36(v61)local v62;if  not v61 then local v94=0;while true do if (v94==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v78=1, #v62 do v63[v78]=v10(v9(v11(v62,v78,v78)));end return v14(v63);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v80=1,v68 do local v81=v32();local v82;if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==(930 -(214 + 713))) then v82=v36();end v69[v80]=v82;end v67[3]=v32();for v84=1,v34() do local v85=v32();if (v31(v85,1,1 + 0 )==0) then local v95=0;local v96;local v97;local v98;while true do if (0==v95) then v96=v31(v85,2,3);v97=v31(v85,4,6);v95=1;end if (v95==2) then if (v31(v97,1,1 + 0 )==1) then v98[2]=v69[v98[2]];end if (v31(v97,2,2)==1) then v98[3]=v69[v98[3 -0 ]];end v95=3;end if (v95==1) then v98={v33(),v33(),nil,nil};if (v96==0) then local v131=0;while true do if (v131==0) then v98[3]=v33();v98[4]=v33();break;end end elseif (v96==1) then v98[880 -(282 + 595) ]=v34();elseif (v96==2) then v98[3]=v34() -(2^16) ;elseif (v96==3) then local v138=0;while true do if (v138==0) then v98[1640 -(1523 + 114) ]=v34() -(2^16) ;v98[4]=v33();break;end end end v95=2;end if (v95==3) then if (v31(v97,1068 -(68 + 997) ,3)==1) then v98[4]=v69[v98[4]];end v64[v84]=v98;break;end end end end for v86=1271 -(226 + 1044) ,v34() do v65[v86-1 ]=v39();end return v67;end local function v40(v71,v72,v73)local v74=0;local v75;local v76;local v77;while true do if (v74==1) then v77=v71[3];return function(...)local v103=v75;local v104=v76;local v105=v77;local v106=v38;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -(4 -3) ;local v112={};local v113={};for v117=0,v111 do if (v117>=v105) then v109[v117-v105 ]=v110[v117 + 1 ];else v113[v117]=v110[v117 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do v115=v103[v107];v116=v115[118 -(32 + 85) ];if (v116<=46) then if (v116<=22) then if (v116<=10) then if (v116<=4) then if (v116<=1) then if (v116==0) then v113[v115[2]]=v115[3 + 0 ];else local v143=0;local v144;while true do if (v143==0) then v144=v115[2];v113[v144](v21(v113,v144 + 1 ,v115[3]));break;end end end elseif (v116<=2) then do return v113[v115[1 + 1 ]]();end elseif (v116==3) then local v203=0;local v204;while true do if (v203==0) then v204=v115[2];v113[v204]=v113[v204](v21(v113,v204 + (958 -(892 + 65)) ,v115[3]));break;end end else v113[v115[2]]=v72[v115[3]];end elseif (v116<=7) then if (v116<=5) then v113[v115[4 -2 ]]=v115[3]~=0 ;elseif (v116==6) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else v113[v115[2]]=v115[3];end elseif (v116<=8) then if (v115[3 -1 ]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[4 -1 ];end elseif (v116>9) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;elseif  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=16) then if (v116<=13) then if (v116<=11) then local v146=v115[2];do return v113[v146](v21(v113,v146 + 1 ,v115[353 -(87 + 263) ]));end elseif (v116>12) then v113[v115[2]]=v113[v115[3]] -v115[4] ;else do return;end end elseif (v116<=14) then local v147=0;local v148;local v149;local v150;local v151;while true do if (v147==2) then for v337=v148,v108 do v151=v151 + 1 ;v113[v337]=v149[v151];end break;end if (v147==1) then v108=(v150 + v148) -1 ;v151=0;v147=2;end if (v147==0) then v148=v115[2];v149,v150=v106(v113[v148](v21(v113,v148 + 1 ,v108)));v147=1;end end elseif (v116>15) then v113[v115[182 -(67 + 113) ]][v115[3]]=v113[v115[4]];else v107=v115[3];end elseif (v116<=19) then if (v116<=17) then v113[v115[2]]={};elseif (v116==18) then local v216=v115[2];local v217,v218=v106(v113[v216](v21(v113,v216 + 1 ,v108)));v108=(v218 + v216) -1 ;local v219=0;for v319=v216,v108 do v219=v219 + 1 ;v113[v319]=v217[v219];end else v113[v115[2]][v113[v115[3 + 0 ]]]=v115[9 -5 ];end elseif (v116<=20) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>21) then v73[v115[3]]=v113[v115[2]];else local v225=v115[2];local v226=v113[v225];local v227=v113[v225 + 2 ];if (v227>0) then if (v226>v113[v225 + 1 + 0 ]) then v107=v115[11 -8 ];else v113[v225 + 3 ]=v226;end elseif (v226<v113[v225 + 1 ]) then v107=v115[3];else v113[v225 + 3 ]=v226;end end elseif (v116<=34) then if (v116<=28) then if (v116<=25) then if (v116<=23) then local v153=0;local v154;while true do if (v153==0) then v154=v115[954 -(802 + 150) ];v113[v154]=v113[v154](v21(v113,v154 + 1 ,v115[3]));break;end end elseif (v116>24) then local v228=0;local v229;local v230;local v231;while true do if (v228==2) then for v390=1,v115[4] do local v391=0;local v392;while true do if (1==v391) then if (v392[1]==62) then v231[v390-1 ]={v113,v392[3]};else v231[v390-1 ]={v72,v392[3]};end v112[ #v112 + 1 + 0 ]=v231;break;end if (v391==0) then v107=v107 + 1 ;v392=v103[v107];v391=1;end end end v113[v115[2]]=v40(v229,v230,v73);break;end if (1==v228) then v231={};v230=v18({},{[v7("\26\238\83\84\183\32\201","\211\69\177\58\58")]=function(v393,v394)local v395=0;local v396;while true do if (v395==0) then v396=v231[v394];return v396[1][v396[5 -3 ]];end end end,[v7("\136\218\119\240\254\194\185\225\124\237","\171\215\133\25\149\137")]=function(v397,v398,v399)local v400=0;local v401;while true do if (v400==0) then v401=v231[v398];v401[1][v401[2]]=v399;break;end end end});v228=2;end if (v228==0) then v229=v104[v115[3]];v230=nil;v228=1;end end elseif v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=26) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[1000 -(915 + 82) ];end elseif (v116==27) then v113[v115[2]]=v73[v115[3]];else local v235=0;local v236;local v237;while true do if (v235==0) then v236=v115[2];v237=v113[v236];v235=1;end if (v235==1) then for v402=v236 + 1 ,v108 do v15(v237,v113[v402]);end break;end end end elseif (v116<=31) then if (v116<=(82 -53)) then v73[v115[2 + 1 ]]=v113[v115[2]];elseif (v116>30) then v113[v115[2]]=v113[v115[3]] * v115[4] ;else v113[v115[2]]=v113[v115[3]] * v115[4] ;end elseif (v116<=32) then v113[v115[2]][v115[3]]=v115[4];elseif (v116==33) then local v240=v115[2];local v241=v113[v240 + 2 ];local v242=v113[v240] + v241 ;v113[v240]=v242;if (v241>0) then if (v242<=v113[v240 + 1 ]) then v107=v115[3];v113[v240 + 3 ]=v242;end elseif (v242>=v113[v240 + 1 ]) then local v405=0;while true do if (v405==0) then v107=v115[3];v113[v240 + 3 ]=v242;break;end end end else local v244=0;local v245;while true do if (0==v244) then v245=v115[2];v113[v245](v21(v113,v245 + (1 -0) ,v108));break;end end end elseif (v116<=40) then if (v116<=37) then if (v116<=35) then local v159=0;local v160;while true do if (v159==0) then v160=v115[2];v113[v160](v21(v113,v160 + 1 ,v115[3]));break;end end elseif (v116>36) then v113[v115[2]]=v115[3]~=0 ;else local v247=v115[2];v113[v247]=v113[v247](v21(v113,v247 + 1 ,v108));end elseif (v116<=38) then local v161=0;local v162;local v163;local v164;local v165;while true do if (v161==0) then v162=v115[2];v163,v164=v106(v113[v162](v113[v162 + 1 ]));v161=1;end if (2==v161) then for v341=v162,v108 do local v342=0;while true do if (v342==0) then v165=v165 + (1188 -(1069 + 118)) ;v113[v341]=v163[v165];break;end end end break;end if (v161==1) then v108=(v164 + v162) -1 ;v165=0;v161=2;end end elseif (v116>39) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else local v251=0;local v252;while true do if (v251==0) then v252=v115[4 -2 ];v113[v252](v113[v252 + 1 ]);break;end end end elseif (v116<=43) then if (v116<=(89 -48)) then v113[v115[2]][v113[v115[1 + 2 ]]]=v113[v115[4]];elseif (v116>(74 -32)) then v72[v115[3]]=v113[v115[2]];else local v255=0;local v256;local v257;while true do if (v255==1) then for v406=v256 + 1 ,v108 do v15(v257,v113[v406]);end break;end if (0==v255) then v256=v115[2];v257=v113[v256];v255=1;end end end elseif (v116<=44) then v113[v115[2]][v115[3]]=v115[4];elseif (v116==45) then if (v115[2]==v113[v115[4 + 0 ]]) then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[2]][v113[v115[3]]]=v115[4];end elseif (v116<=69) then if (v116<=57) then if (v116<=51) then if (v116<=48) then if (v116==47) then v113[v115[2]]= #v113[v115[3]];else local v171=v115[2];local v172=v113[v171 + 2 ];local v173=v113[v171] + v172 ;v113[v171]=v173;if (v172>0) then if (v173<=v113[v171 + 1 ]) then v107=v115[3];v113[v171 + 3 ]=v173;end elseif (v173>=v113[v171 + 1 ]) then local v346=0;while true do if (v346==0) then v107=v115[3];v113[v171 + 3 ]=v173;break;end end end end elseif (v116<=49) then v113[v115[2]]=v113[v115[3]] + v115[4] ;elseif (v116==50) then v113[v115[2]]=v113[v115[3]] -v115[4] ;else for v326=v115[2],v115[3] do v113[v326]=nil;end end elseif (v116<=54) then if (v116<=52) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==53) then v107=v115[794 -(368 + 423) ];else v113[v115[6 -4 ]]=v113[v115[3]]%v113[v115[4]] ;end elseif (v116<=55) then v113[v115[20 -(10 + 8) ]]=v113[v115[3]][v115[4]];elseif (v116==56) then v113[v115[2]]=v113[v115[3]][v115[4]];else local v266=0;local v267;while true do if (0==v266) then v267=v115[2];v113[v267]=v113[v267](v21(v113,v267 + 1 ,v108));break;end end end elseif (v116<=63) then if (v116<=60) then if (v116<=58) then v113[v115[2]]=v115[3] + v113[v115[4]] ;elseif (v116>59) then local v268=0;local v269;local v270;local v271;local v272;while true do if (v268==2) then for v407=v269,v108 do v272=v272 + (3 -2) ;v113[v407]=v270[v272];end break;end if (v268==1) then v108=(v271 + v269) -1 ;v272=0;v268=2;end if (v268==0) then v269=v115[2];v270,v271=v106(v113[v269](v21(v113,v269 + 1 ,v115[3])));v268=1;end end else local v273=v115[2];do return v113[v273](v21(v113,v273 + 1 ,v115[3]));end end elseif (v116<=61) then v113[v115[2]]=v113[v115[3]] + v115[4] ;elseif (v116==62) then v113[v115[2]]=v113[v115[3]];else v113[v115[2]]=v72[v115[3]];end elseif (v116<=(508 -(416 + 26))) then if (v116<=64) then v113[v115[2]]={};elseif (v116>65) then v113[v115[6 -4 ]][v115[2 + 1 ]]=v113[v115[6 -2 ]];else do return v113[v115[2]]();end end elseif (v116<=67) then local v181=v115[2];local v182,v183=v106(v113[v181](v113[v181 + 1 ]));v108=(v183 + v181) -1 ;local v184=0;for v197=v181,v108 do v184=v184 + 1 ;v113[v197]=v182[v184];end elseif (v116==68) then local v280=v115[2];local v281,v282=v106(v113[v280](v21(v113,v280 + (439 -(145 + 293)) ,v115[3])));v108=(v282 + v280) -1 ;local v283=0;for v328=v280,v108 do local v329=0;while true do if (v329==0) then v283=v283 + 1 ;v113[v328]=v281[v283];break;end end end else local v284=0;local v285;while true do if (v284==0) then v285=v115[2];do return v21(v113,v285,v108);end break;end end end elseif (v116<=81) then if (v116<=75) then if (v116<=72) then if (v116<=70) then v113[v115[2]]= #v113[v115[3]];elseif (v116==71) then v113[v115[2]]=v113[v115[3]] -v113[v115[4]] ;else for v330=v115[2],v115[3] do v113[v330]=nil;end end elseif (v116<=73) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[433 -(44 + 386) ];end elseif (v116==74) then do return;end else v113[v115[2]]=v113[v115[3]] -v113[v115[4]] ;end elseif (v116<=78) then if (v116<=76) then v113[v115[2]]=v113[v115[3]] + v113[v115[4]] ;elseif (v116==77) then local v289=0;local v290;while true do if (v289==0) then v290=v115[2];v113[v290]=v113[v290]();break;end end else local v291=0;local v292;while true do if (0==v291) then v292=v115[2];v113[v292]=v113[v292]();break;end end end elseif (v116<=79) then local v187=0;local v188;local v189;local v190;while true do if (v187==1) then v190=v113[v188 + 2 ];if (v190>0) then if (v189>v113[v188 + 1 ]) then v107=v115[3];else v113[v188 + 3 ]=v189;end elseif (v189<v113[v188 + 1 ]) then v107=v115[3];else v113[v188 + 3 ]=v189;end break;end if (v187==0) then v188=v115[2];v189=v113[v188];v187=1;end end elseif (v116==80) then v113[v115[2]]=v113[v115[3]];else local v295=0;local v296;while true do if (v295==0) then v296=v115[1488 -(998 + 488) ];v113[v296](v113[v296 + 1 + 0 ]);break;end end end elseif (v116<=87) then if (v116<=84) then if (v116<=82) then v113[v115[2]]=v113[v115[3]] + v113[v115[4]] ;elseif (v116>83) then v113[v115[2]]=v73[v115[3]];else v72[v115[3]]=v113[v115[2 + 0 ]];end elseif (v116<=(857 -(201 + 571))) then v113[v115[1140 -(116 + 1022) ]]=v115[3] + v113[v115[4]] ;elseif (v116>86) then local v301=0;local v302;local v303;while true do if (0==v301) then v302=v115[2];v303={};v301=1;end if (v301==1) then for v412=1, #v112 do local v413=0;local v414;while true do if (v413==0) then v414=v112[v412];for v449=0, #v414 do local v450=0;local v451;local v452;local v453;while true do if (v450==1) then v453=v451[2];if ((v452==v113) and (v453>=v302)) then v303[v453]=v452[v453];v451[1]=v303;end break;end if (v450==0) then v451=v414[v449];v452=v451[4 -3 ];v450=1;end end end break;end end end break;end end else local v304=0;local v305;local v306;while true do if (v304==0) then v305=v115[2];v306=v113[v115[3]];v304=1;end if (v304==1) then v113[v305 + 1 ]=v306;v113[v305]=v306[v115[4]];break;end end end elseif (v116<=90) then if (v116<=88) then local v193=0;local v194;while true do if (v193==0) then v194=v115[2];do return v21(v113,v194,v108);end break;end end elseif (v116==89) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else local v308=0;local v309;while true do if (v308==0) then v309=v115[2 + 0 ];v113[v309](v21(v113,v309 + 1 ,v108));break;end end end elseif (v116<=91) then local v195=v115[2];local v196={};for v200=1, #v112 do local v201=0;local v202;while true do if (0==v201) then v202=v112[v200];for v374=0, #v202 do local v375=0;local v376;local v377;local v378;while true do if (1==v375) then v378=v376[2];if ((v377==v113) and (v378>=v195)) then local v454=0;while true do if (v454==0) then v196[v378]=v377[v378];v376[1]=v196;break;end end end break;end if (v375==0) then v376=v202[v374];v377=v376[1];v375=1;end end end break;end end end elseif (v116>92) then local v310=0;local v311;local v312;local v313;while true do if (v310==0) then v311=v104[v115[3]];v312=nil;v310=1;end if (v310==2) then for v415=1,v115[4] do local v416=0;local v417;while true do if (v416==1) then if (v417[1]==62) then v313[v415-1 ]={v113,v417[3]};else v313[v415-1 ]={v72,v417[3]};end v112[ #v112 + 1 ]=v313;break;end if (v416==0) then v107=v107 + 1 ;v417=v103[v107];v416=1;end end end v113[v115[2]]=v40(v311,v312,v73);break;end if (v310==1) then v313={};v312=v18({},{[v7("\222\247\59\244\235\53\228","\34\129\168\82\154\143\80\156")]=function(v418,v419)local v420=0;local v421;while true do if (v420==0) then v421=v313[v419];return v421[1][v421[2]];end end end,[v7("\186\141\61\14\95\71\135\129\183\43","\233\229\210\83\107\40\46")]=function(v422,v423,v424)local v425=v313[v423];v425[1][v425[7 -5 ]]=v424;end});v310=2;end end else local v314=0;local v315;local v316;while true do if (v314==1) then v113[v315 + (2 -1) ]=v316;v113[v315]=v316[v115[4]];break;end if (v314==0) then v315=v115[2];v316=v113[v115[862 -(814 + 45) ]];v314=1;end end end v107=v107 + 1 ;end end;end if (v74==0) then v75=v71[1];v76=v71[2];v74=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
-- this script was protected by TheRealX_ORA on yt
-- if you want the script without being ObFuscator
-- hit me on my discord server
-- Disocrd: https://discord.gg/nJhrQAUjpm
